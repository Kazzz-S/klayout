MacPorts

https://www.macports.org/install.php

Quickstart
Install Apple's Command Line Developer Tools: xcode-select --install
Install MacPorts for your version of the Mac operating system:
macOS Tahoe v26
macOS Sequoia v15
macOS Sonoma v14
macOS Ventura v13
Older OS? See here.

$ sudo port install coreutils
$ sudo port install findutils
$ sudo port install libgit2
$ sudo port install qt5

==========================================================================
$ sudo port install qt6
==========================================================================

$ sudo port install coreutils
$ sudo port install findutils
$ sudo port install qt5
$ sudo port install ruby34
$ sudo port install python313
$ sudo port install py313-pip
$ sudo port install libgit2


==========================================================================
Anaconda3-Arm64

Anaconda3-2025.06-0-MacOSX-arm64.pkg

Last login: Sun Oct 12 06:46:45 on ttys000
(base) MacMini{sekigawa} ~ (153)% which python3
/opt/anaconda3/bin/python3
(base) MacMini{sekigawa} ~ (154)% python3
Python 3.13.5 | packaged by Anaconda, Inc. | (main, Jun 12 2025, 11:23:37) [Clang 14.0.6 ] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>>

(base) MacMini{sekigawa} bin (168)% conda search ruby
2 channel Terms of Service accepted
Loading channels: done
# Name                       Version           Build  Channel
ruby                           2.5.1      hacf69a2_0  pkgs/main
ruby                           3.1.2      hc19afb0_0  pkgs/main
ruby                           3.1.2      hd6dd3be_1  pkgs/main
ruby                           3.1.4      h136664f_0  pkgs/main
ruby                           3.2.2      h62f6fdd_0  pkgs/main
(base) MacMini{sekigawa} bin (169)% conda search libgit2
2 channel Terms of Service accepted
Loading channels: done
# Name                       Version           Build  Channel
libgit2                        1.0.1      h95c9599_0  pkgs/main
libgit2                        1.5.0      h98b2900_0  pkgs/main
libgit2                        1.6.4      h514c7bf_0  pkgs/main


# Qt5 bundled with anaconda3 installed under /opt/anaconda3/
#   using "Anaconda3-2025.06-0-MacOSX-arm64.pkg", then
#
#   1) Create a new env "klayout-qt5" (with stable solver & channels)
#      switch solver to libmamba for faster/more stable resolves
#        $ conda install -n base -y conda-libmamba-solver
#        $ conda config --set solver libmamba
#
#      Create the environment (on this ARM machine it will pull osx-arm64 builds)
#        $ conda create -n klayout-qt5 python=3.13 -y
#        $ conda activate klayout-qt5
#
#      In this env only, prefer conda-forge strictly (to avoid mixing)
#        $ conda config --env --add channels conda-forge
#        $ conda config --env --add channels defaults
#        $ conda config --env --set channel_priority strict
#        $ conda install -n base -y conda-libmamba-solver
#        $ conda config --set solver libmamba
#
#   2) Install Qt5 (qt-main) from conda-forge only
#      Qt5 core (builds that typically include Designer/UiTools)
#        $ conda install -y --override-channels -c conda-forge "qt-main=5.15.15"
#
# [Key Type Name] = 'Qt5Ana3'
Ana3Env = '/opt/anaconda3/opt/anaconda3/envs/klayout-qt5'
Qt5Ana3 = { 'qmake' : '%s/bin/qmake' % Ana3Env,
            'deploy': '%s/bin/macdeployqt' % Ana3Env,
            'libdir': '%s/lib' % Ana3Env
          }

In the virtual env.
 $ conda install -y --override-channels -c conda-forge "ruby=3.4.7"
 $ conda install -y --override-channels -c conda-forge "libgit2=1.9.1"


Patching...

(klayout-qt5) MacMini{sekigawa} common (295)% pwd
/opt/anaconda3/envs/klayout-qt5/mkspecs/common
(klayout-qt5) MacMini{sekigawa} common (299)% diff mac.conf*
33c33
< QMAKE_LIBS_OPENGL       = -framework OpenGL
---
> QMAKE_LIBS_OPENGL       = -framework OpenGL -framework AGL

(klayout-qt5) MacMini{sekigawa} modules (330)% pwd
/opt/anaconda3/envs/klayout-qt5/mkspecs/modules
(klayout-qt5) MacMini{sekigawa} modules (331)% diff qt_lib_gui_private.pri*
12c12
< QMAKE_INCDIR_OPENGL = /System/Library/Frameworks/OpenGL.framework/Headers
---
> QMAKE_INCDIR_OPENGL = /System/Library/Frameworks/OpenGL.framework/Headers /System/Library/Frameworks/AGL.framework/Headers/
15c15
< QMAKE_LIBS_OPENGL = -framework OpenGL
---
> QMAKE_LIBS_OPENGL = -framework OpenGL -framework AGL



# Qt6 bundled with anaconda3 installed under /opt/anaconda3/
#   using "Anaconda3-2025.06-0-MacOSX-arm64.pkg", then
#
#   1) Create a new env "klayout-qt6" (with stable solver & channels)
#      switch solver to libmamba for faster/more stable resolves
#        $ conda install -n base -y conda-libmamba-solver
#        $ conda config --set solver libmamba
#
#      Create the environment (on this ARM machine it will pull osx-arm64 builds)
#        $ conda create -n klayout-qt6 python=3.13 -y
#        $ conda activate klayout-qt6
#
#      In this env only, prefer conda-forge strictly (to avoid mixing)
#        $ conda config --env --add channels conda-forge
#        $ conda config --env --add channels defaults
#        $ conda config --env --set channel_priority strict
#        $ conda install -n base -y conda-libmamba-solver
#        $ conda config --set solver libmamba
#
#   2) Install Qt5 (qt-main) from conda-forge only
#      Qt5 core (builds that typically include Designer/UiTools)
#        $ conda install -y --override-channels -c conda-forge "qt6-main=6.9.3"
#        $ conda install -y --override-channels -c conda-forge "qt6-multimedia=6.9.3"


 $ conda install -y --override-channels -c conda-forge "ruby=3.4.7"
 $ conda install -y --override-channels -c conda-forge "libgit2=1.9.1"

==========================================================================
Anaconda3-X86_64

Anaconda3-2025.06-0-MacOSX-x86_64.pkg

(base) MacBookPro2{sekigawa} ~ (1386)% which python3
/Applications/anaconda3/bin/python3
(base) MacBookPro2{sekigawa} ~ (1387)% python3
Python 3.13.5 | packaged by Anaconda, Inc. | (main, Jun 12 2025, 11:09:21) [Clang 14.0.6 ] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>>

(base) MacBookPro2{sekigawa} ~ (1388)% conda search ruby
2 channel Terms of Service accepted
Loading channels: done
# Name                       Version           Build  Channel
ruby                           2.4.1      h21f2d3e_0  pkgs/main
ruby                           2.4.1      hd1a239f_0  pkgs/main
ruby                           2.4.4      h41031b0_0  pkgs/main
ruby                           2.5.1      h41031b0_0  pkgs/main
ruby                           2.5.1      h7107397_0  pkgs/main
ruby                           2.5.1      h74228e1_0  pkgs/main
ruby                           3.1.2      h471fc2d_0  pkgs/main
ruby                           3.1.2      hf85d527_1  pkgs/main
ruby                           3.1.4      h6572bd2_0  pkgs/main
ruby                           3.2.2      he8a3799_0  pkgs/main
(base) MacBookPro2{sekigawa} ~ (1389)% conda search libgit2
2 channel Terms of Service accepted
Loading channels: done
# Name                       Version           Build  Channel
libgit2                        1.5.0      h8346a28_0  pkgs/main
libgit2                        1.6.4      hfff2838_0  pkgs/main

(base) MacBookPro2{sekigawa} ~ (1391)% conda list | grep qt
aws-c-mqtt                       0.7.13               h6c40b1e_0
pyqt                             5.15.10              py313h6d0c2b6_1
pyqt5-sip                        12.13.0              py313h46256e1_1
pyqtwebengine                    5.15.10              py313h6d0c2b6_1
qt-main                          5.15.2               hf83fbd5_12
qt-webengine                     5.15.9               h90a370e_7
qtawesome                        1.4.0                py313hecd8cb5_0
qtconsole                        5.6.1                py313hecd8cb5_1
qtpy                             2.4.1                py313hecd8cb5_0
sphinxcontrib-qthelp             2.0.0                pyhd3eb1b0_1
superqt                          0.7.3                py313h653c010_0

# [x86_64|Intel]
#   Qt5 is to be installed under /Applications/anaconda3/envs/klayout-qt5
#   after installing "Anaconda3-2025.06-0-MacOSX-x86_64.pkg" under /Applications/anaconda3/.
#
#   1) Create a new env "klayout-qt5" (with stable solver & channels)
#      switch solver to libmamba for faster/more stable resolves
#        $ conda install -n base -y conda-libmamba-solver
#        $ conda config --set solver libmamba
#
#      Create the environment (on this x86_64 machine it will pull osx-64 builds)
#        $ conda create -n klayout-qt5 python=3.13 -y
#        $ conda activate klayout-qt5
#
#      In this env only, prefer conda-forge strictly (to avoid mixing)
#        $ conda config --env --add channels conda-forge
#        $ conda config --env --add channels defaults
#        $ conda config --env --set channel_priority strict
#        $ conda install -n base -y conda-libmamba-solver
#        $ conda config --set solver libmamba
#
#   2) Install Qt5 (qt-main) only from conda-forge
#      Qt5 core (builds that typically include Designer/UiTools)
#        $ conda install -y --override-channels -c conda-forge "qt-main=5.15.15"
#
#   3) Additionally, install Ruby and libgit2 only from conda-forge
#        $ conda install -y --override-channels -c conda-forge "ruby=3.4.7"
#        $ conda install -y --override-channels -c conda-forge "libgit2=1.9.1"

# [x86_64|Intel]
#   Qt6 is to be installed under /Applications/anaconda3/envs/klayout-qt6
#   after installing "Anaconda3-2025.06-0-MacOSX-x86_64.pkg" under /Applications/anaconda3/.
#
#   1) Create a new env "klayout-qt6" (with stable solver & channels)
#      switch solver to libmamba for faster/more stable resolves
#        $ conda install -n base -y conda-libmamba-solver
#        $ conda config --set solver libmamba
#
#      Create the environment (on this x86_64 machine it will pull osx-64 builds)
#        $ conda create -n klayout-qt6 python=3.13 -y
#        $ conda activate klayout-qt6
#
#      In this env only, prefer conda-forge strictly (to avoid mixing)
#        $ conda config --env --add channels conda-forge
#        $ conda config --env --add channels defaults
#        $ conda config --env --set channel_priority strict
#        $ conda install -n base -y conda-libmamba-solver
#        $ conda config --set solver libmamba
#
#   2) Install Qt6 (qt-main) only from conda-forge
#      Qt6 core (builds that typically include Designer/UiTools)
#        $ conda install -y --override-channels -c conda-forge "qt6-main=6.9.3"
#
#   3) Additionally, install Ruby and libgit2 only from conda-forge
#        $ conda install -y --override-channels -c conda-forge "ruby=3.4.7"
#        $ conda install -y --override-channels -c conda-forge "libgit2=1.9.1"

==========================================================================
Homebrew

/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

major components:
$ brew install qt@6
$ brew install ruby@3.4
$ brew install python@3.13
$ brew install libgit2


sub components:
$ brew install git
$ brew install qt@5
$ brew install python@3.12
$ brew install python@3.11




