			"// [1]\n"
			"#version 150\n"
			"\n"
			"in vec4 posAttr;\n"
			"\n"
			"void main() {\n"
			"   gl_Position = posAttr;\n"
			"};\n"
			"----------------------------------------------------------------------------------------------------\n"
			"#version 120\n"
			"\n"
			"attribute vec4 posAttr;\n"
			"\n"
			"void main() {\n"
			"   gl_Position = posAttr;\n"
			"}\n"
			"\n"
			"\n"
			"====================================================================================================\n"
			"// [2]\n"
			"#version 150\n"
			"\n"
			"uniform vec4 color;\n"
			"uniform vec4 ambient;\n"
			"uniform vec3 illum;\n"
			"out lowp vec4 vertexColor;\n"
			"uniform mat4 matrix;\n"
			"layout (triangles) in;\n"
			"layout (triangle_strip, max_vertices = 3) out;\n"
			"\n"
			"void main() {\n"
			"   vec4 p0 = gl_in[0].gl_Position;\n"
			"   vec4 p1 = gl_in[1].gl_Position;\n"
			"   vec4 p2 = gl_in[2].gl_Position;\n"
			"   vec3 n = cross(p2.xyz - p0.xyz, p1.xyz - p0.xyz);\n"
			"   float dp = dot(normalize(n), illum);\n"
			"   vertexColor = color * (dp * 0.5 + 0.5) - (min(0.0, dp) * ambient);\n"
			"   vertexColor.a = 1.0;\n"
			"   gl_Position = matrix * p0;\n"
			"   EmitVertex();\n"
			"   gl_Position = matrix * p1;\n"
			"   EmitVertex();\n"
			"   gl_Position = matrix * p2;\n"
			"   EmitVertex();\n"
			"   EndPrimitive();\n"
			"};\n"
			"----------------------------------------------------------------------------------------------------\n"
			"#version 120\n"
			"\n"
			"uniform vec4 color;\n"
			"uniform vec4 ambient;\n"
			"uniform vec3 illum;\n"
			"uniform mat4 matrix;\n"
			"varying vec4 vertexColor;\n"
			"\n"
			"void main() {\n"
			"   vec4 p0 = gl_PositionIn[0];\n"
			"   vec4 p1 = gl_PositionIn[1];\n"
			"   vec4 p2 = gl_PositionIn[2];\n"
			"   vec3 n = cross(p2.xyz - p0.xyz, p1.xyz - p0.xyz);\n"
			"   float dp = dot(normalize(n), illum);\n"
			"   vertexColor = color * (dp * 0.5 + 0.5) - (min(0.0, dp) * ambient);\n"
			"   vertexColor.a = 1.0;\n"
			"   gl_Position = matrix * p0;\n"
			"   EmitVertex();\n"
			"   gl_Position = matrix * p1;\n"
			"   EmitVertex();\n"
			"   gl_Position = matrix * p2;\n"
			"   EmitVertex();\n"
			"   EndPrimitive();\n"
			"}\n"
			"\n"
			"====================================================================================================\n"
			"// [3]\n"
			"#version 150\n"
			"\n"
			"in lowp vec4 vertexColor;\n"
			"out lowp vec4 fragColor;\n"
			"uniform highp float mist_factor;\n"
			"uniform highp float mist_add;\n"
			"\n"
			"lowp vec4 color_by_z(lowp vec4 c, highp float z) {\n"
			"  highp float mist_rgb = c.g * mist_factor + mist_add;\n"
			"  lowp vec4 mist_color = vec4(mist_rgb, mist_rgb, mist_rgb, 1.0);\n"
			"  highp float d = 0.12; //  d + dd/2 = 0.15 = 1/?\n"
			"  highp float dd = 0.06;\n"
			"  highp float f = 1.0;\n"
			"  if (z < d - dd) {\n"
			"    f = 0.0;\n"
			"  } else if (z < d + dd) {\n"
			"    f = (z - (d - dd)) / (2.0 * dd);\n"
			"  }\n"
			"  return (1.0 - f) * mist_color + f * c;\n"
			"};\n"
			"\n"
			"void main() {\n"
			"   fragColor = color_by_z(vertexColor, gl_FragCoord.w);\n"
			"};\n"
			"----------------------------------------------------------------------------------------------------\n"
			"#version 120\n"
			"\n"
			"varying vec4 vertexColor;\n"
			"varying vec4 fragColor;\n"
			"uniform float mist_factor;\n"
			"uniform float mist_add;\n"
			"\n"
			"vec4 color_by_z(vec4 c, float z) {\n"
			"    float mist_rgb = c.g * mist_factor + mist_add;\n"
			"    vec4 mist_color = vec4(mist_rgb, mist_rgb, mist_rgb, 1.0);\n"
			"    float d = 0.12;\n"
			"    float dd = 0.06;\n"
			"    float f = 1.0;\n"
			"    if (z < d - dd) {\n"
			"        f = 0.0;\n"
			"    } else if (z < d + dd) {\n"
			"        f = (z - (d - dd)) / (2.0 * dd);\n"
			"    }\n"
			"    return (1.0 - f) * mist_color + f * c;\n"
			"}\n"
			"\n"
			"void main() {\n"
			"   fragColor = color_by_z(vertexColor, gl_FragCoord.w);\n"
			"}\n"
			"\n"
			"\n"
			"====================================================================================================\n"
			"// [4]\n"
			"#version 150\n"
			"\n"
			"in vec4 posAttr;\n"
			"uniform mat4 matrix;\n"
			"\n"
			"void main() {\n"
			"   gl_Position = matrix * posAttr;\n"
			"};\n"
			"----------------------------------------------------------------------------------------------------\n"
			"#version 120\n"
			"\n"
			"attribute vec4 posAttr;\n"
			"uniform mat4 matrix;\n"
			"\n"
			"void main() {\n"
			"   gl_Position = matrix * posAttr;\n"
			"}\n"
			"\n"
			"\n"
			"====================================================================================================\n"
			"// [5]\n"
			"#version 150\n"
			"\n"
			"uniform lowp vec4 color;\n"
			"out lowp vec4 fragColor;\n"
			"uniform highp float mist_factor;\n"
			"uniform highp float mist_add;\n"
			"\n"
			"lowp vec4 color_by_z(lowp vec4 c, highp float z) {\n"
			"  highp float mist_rgb = c.g * mist_factor + mist_add;\n"
			"  lowp vec4 mist_color = vec4(mist_rgb, mist_rgb, mist_rgb, 1.0);\n"
			"  highp float d = 0.12; //  d + dd/2 = 0.15 = 1/?\n"
			"  highp float dd = 0.06;\n"
			"  highp float f = 1.0;\n"
			"  if (z < d - dd) {\n"
			"    f = 0.0;\n"
			"  } else if (z < d + dd) {\n"
			"    f = (z - (d - dd)) / (2.0 * dd);\n"
			"  }\n"
			"  return (1.0 - f) * mist_color + f * c;\n"
			"};\n"
			"\n"
			"void main() {\n"
			"   fragColor = color_by_z(color, gl_FragCoord.w);\n"
			"};\n"
			"----------------------------------------------------------------------------------------------------\n"
			"#version 120\n"
			"\n"
			"uniform vec4 color;\n"
			"varying vec4 fragColor;\n"
			"uniform float mist_factor;\n"
			"uniform float mist_add;\n"
			"\n"
			"vec4 color_by_z(vec4 c, float z) {\n"
			"    float mist_rgb = c.g * mist_factor + mist_add;\n"
			"    vec4 mist_color = vec4(mist_rgb, mist_rgb, mist_rgb, 1.0);\n"
			"    float d = 0.12;\n"
			"    float dd = 0.06;\n"
			"    float f = 1.0;\n"
			"    if (z < d - dd) {\n"
			"        f = 0.0;\n"
			"    } else if (z < d + dd) {\n"
			"        f = (z - (d - dd)) / (2.0 * dd);\n"
			"    }\n"
			"    return (1.0 - f) * mist_color + f * c;\n"
			"}\n"
			"\n"
			"void main() {\n"
			"   fragColor = color_by_z(color, gl_FragCoord.w);\n"
			"}\n"
			"\n"
			"\n"
			"====================================================================================================\n"
			"// [6]\n"
			"#version 150\n"
			"\n"
			"in vec4 posAttr;\n"
			"uniform mat4 matrix;\n"
			"\n"
			"void main() {\n"
			"   gl_Position = matrix * posAttr;\n"
			"};\n"
			"----------------------------------------------------------------------------------------------------\n"
			"#version 120\n"
			"\n"
			"attribute vec4 posAttr;\n"
			"uniform mat4 matrix;\n"
			"\n"
			"void main() {\n"
			"   gl_Position = matrix * posAttr;\n"
			"}\n"
			"\n"
			"\n"
			"====================================================================================================\n"
			"// [7]\n"
			"#version 150\n"
			"\n"
			"uniform lowp vec4 color;\n"
			"out lowp vec4 fragColor;\n"
			"void main() {\n"
			"   fragColor = color;\n"
			"};\n"
			"----------------------------------------------------------------------------------------------------\n"
			"#version 120\n"
			"\n"
			"uniform vec4 color;\n"
			"varying vec4 fragColor;\n"
			"\n"
			"void main() {\n"
			"   fragColor = color;\n"
			"}\n"
			"====================================================================================================\n"
			"\n"
